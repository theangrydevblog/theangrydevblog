apiVersion: apps/v1
kind: Deployment
metadata:
  name: theangrydevblog
  namespace: default
  labels:
    app: theangrydevblog
spec:
  replicas: 2
  selector:
    matchLabels:
      app: theangrydevblog
  template:
    metadata:
      labels:
        app: theangrydevblog
    spec:
      containers:
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.14
          command: ["/cloud_sql_proxy",
                    "-instances=$INSTANCE_CONNECTION_NAME=tcp:5432",
                    # If running on a VPC, the Cloud SQL proxy can connect via Private IP. See:
                    # https://cloud.google.com/sql/docs/mysql/private-ip for more info.
                    "-ip_address_types=PRIVATE",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          # [START cloudsql_security_context]
          securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
          # [END cloudsql_security_context]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
        - name: theangrydevblog
          image: iamprithaj/theangrydevblog:$COMMIT_SHA1
          env:
            - name: POSTGRES_HOST
              value: 127.0.0.1
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: "$POSTGRES_USER"
            - name: POSTGRES_PASSWORD
              value: "$POSTGRES_PASSWORD"
            - name: POSTGRES_NAME
              value: "$POSTGRES_NAME"
            - name: DJANGO_SECRET
              value: "$DJANGO_SECRET"
            - name: PORT
              value: "$PORT"
            - name: DEBUG
              value: "$DEBUG"
            - name: CIDR_RANGES
              value: "$CIDR_RANGES" 
            - name: AWS_STORAGE_BUCKET_NAME
              value: "$AWS_STORAGE_BUCKET_NAME"
            - name : AWS_S3_REGION_NAME
              value: "$AWS_S3_REGION_NAME"
            - name : AWS_ACCESS_KEY_ID
              value: "$AWS_ACCESS_KEY_ID"
            - name : AWS_SECRET_ACCESS_KEY
              value: "$AWS_SECRET_ACCESS_KEY"
            - name : AWS_S3_CUSTOM_DOMAIN
              value: "$AWS_S3_CUSTOM_DOMAIN"
            - name : OAUTH_CLIENT_ID
              value: "$OAUTH_CLIENT_ID"
            - name : OAUTH_CLIENT_SECRET
              value: "$OAUTH_CLIENT_SECRET"
            - name: OAUTH_SIGNUP_CLIENT_ID
              value: "$OAUTH_SIGNUP_CLIENT_ID"
            - name: OAUTH_SIGNUP_CLIENT_SECRET
              value: "$OAUTH_SIGNUP_CLIENT_SECRET"
          ports:
            - containerPort: 9000
              name: http
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
